{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yujir\\\\Documents\\\\Projet annuel\\\\Projjet_Annuel_Perso\\\\partiefront\\\\src\\\\components\\\\CheckoutForm.jsx\",\n  _s = $RefreshSig$();\nimport { PaymentElement, LinkAuthenticationElement } from '@stripe/react-stripe-js';\nimport { useState } from 'react';\nimport { useStripe, useElements } from '@stripe/react-stripe-js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CheckoutForm() {\n  _s();\n  const stripe = useStripe();\n  const elements = useElements();\n  const [message, setMessage] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!stripe || !elements) {\n      // Stripe.js has not yet loaded.\n      // Make sure to disable form submission until Stripe.js has loaded.\n      return;\n    }\n    setIsLoading(true);\n    const {\n      error\n    } = await stripe.confirmPayment({\n      elements,\n      confirmParams: {\n        // Make sure to change this to your payment completion page\n        return_url: `${window.location.origin}/completion`\n      }\n    });\n\n    // This point will only be reached if there is an immediate error when\n    // confirming the payment. Otherwise, your customer will be redirected to\n    // your `return_url`. For some payment methods like iDEAL, your customer will\n    // be redirected to an intermediate site first to authorize the payment, then\n    // redirected to the `return_url`.\n    if (error.type === \"card_error\" || error.type === \"validation_error\") {\n      setMessage(error.message);\n    } else {\n      setMessage(\"An unexpected error occured.\");\n    }\n    setIsLoading(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    id: \"payment-form\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(LinkAuthenticationElement, {\n      id: \"link-authentication-element\"\n      // Access the email value like so:\n      // onChange={(event) => {\n      //  setEmail(event.value.email);\n      // }}\n      //\n      // Prefill the email field like so:\n      // options={{defaultValues: {email: 'foo@bar.com'}}}\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PaymentElement, {\n      id: \"payment-element\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      disabled: isLoading || !stripe || !elements,\n      id: \"submit\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        id: \"button-text\",\n        children: isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"spinner\",\n          id: \"spinner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 24\n        }, this) : \"Pay now\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"payment-message\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n_s(CheckoutForm, \"dCp8GD2PngabXglFzb6wYe55PBM=\", false, function () {\n  return [useStripe, useElements];\n});\n_c = CheckoutForm;\nvar _c;\n$RefreshReg$(_c, \"CheckoutForm\");","map":{"version":3,"names":["PaymentElement","LinkAuthenticationElement","useState","useStripe","useElements","jsxDEV","_jsxDEV","CheckoutForm","_s","stripe","elements","message","setMessage","isLoading","setIsLoading","handleSubmit","e","preventDefault","error","confirmPayment","confirmParams","return_url","window","location","origin","type","id","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","disabled","className","_c","$RefreshReg$"],"sources":["C:/Users/yujir/Documents/Projet annuel/Projjet_Annuel_Perso/partiefront/src/components/CheckoutForm.jsx"],"sourcesContent":["import {\n  PaymentElement,\n  LinkAuthenticationElement\n} from '@stripe/react-stripe-js'\nimport {useState} from 'react'\nimport {useStripe, useElements} from '@stripe/react-stripe-js';\n\nexport default function CheckoutForm() {\n  const stripe = useStripe();\n  const elements = useElements();\n  const [message, setMessage] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    if (!stripe || !elements) {\n      // Stripe.js has not yet loaded.\n      // Make sure to disable form submission until Stripe.js has loaded.\n      return;\n    }\n\n    setIsLoading(true);\n\n    const { error } = await stripe.confirmPayment({\n      elements,\n      confirmParams: {\n        // Make sure to change this to your payment completion page\n        return_url: `${window.location.origin}/completion`,\n      },\n    });\n\n    // This point will only be reached if there is an immediate error when\n    // confirming the payment. Otherwise, your customer will be redirected to\n    // your `return_url`. For some payment methods like iDEAL, your customer will\n    // be redirected to an intermediate site first to authorize the payment, then\n    // redirected to the `return_url`.\n    if (error.type === \"card_error\" || error.type === \"validation_error\") {\n      setMessage(error.message);\n    } else {\n      setMessage(\"An unexpected error occured.\");\n    }\n\n    setIsLoading(false);\n  }\n\n  return (\n    <form id=\"payment-form\" onSubmit={handleSubmit}>\n      <LinkAuthenticationElement id=\"link-authentication-element\"\n        // Access the email value like so:\n        // onChange={(event) => {\n        //  setEmail(event.value.email);\n        // }}\n        //\n        // Prefill the email field like so:\n        // options={{defaultValues: {email: 'foo@bar.com'}}}\n        />\n      <PaymentElement id=\"payment-element\" />\n      <button disabled={isLoading || !stripe || !elements} id=\"submit\">\n        <span id=\"button-text\">\n          {isLoading ? <div className=\"spinner\" id=\"spinner\"></div> : \"Pay now\"}\n        </span>\n      </button>\n      {/* Show any error or success messages */}\n      {message && <div id=\"payment-message\">{message}</div>}\n    </form>\n  )\n}\n"],"mappings":";;AAAA,SACEA,cAAc,EACdC,yBAAyB,QACpB,yBAAyB;AAChC,SAAQC,QAAQ,QAAO,OAAO;AAC9B,SAAQC,SAAS,EAAEC,WAAW,QAAO,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/D,eAAe,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACrC,MAAMC,MAAM,GAAGN,SAAS,CAAC,CAAC;EAC1B,MAAMO,QAAQ,GAAGN,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACO,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACW,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAEjD,MAAMa,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAElB,IAAI,CAACR,MAAM,IAAI,CAACC,QAAQ,EAAE;MACxB;MACA;MACA;IACF;IAEAI,YAAY,CAAC,IAAI,CAAC;IAElB,MAAM;MAAEI;IAAM,CAAC,GAAG,MAAMT,MAAM,CAACU,cAAc,CAAC;MAC5CT,QAAQ;MACRU,aAAa,EAAE;QACb;QACAC,UAAU,EAAG,GAAEC,MAAM,CAACC,QAAQ,CAACC,MAAO;MACxC;IACF,CAAC,CAAC;;IAEF;IACA;IACA;IACA;IACA;IACA,IAAIN,KAAK,CAACO,IAAI,KAAK,YAAY,IAAIP,KAAK,CAACO,IAAI,KAAK,kBAAkB,EAAE;MACpEb,UAAU,CAACM,KAAK,CAACP,OAAO,CAAC;IAC3B,CAAC,MAAM;MACLC,UAAU,CAAC,8BAA8B,CAAC;IAC5C;IAEAE,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC;EAED,oBACER,OAAA;IAAMoB,EAAE,EAAC,cAAc;IAACC,QAAQ,EAAEZ,YAAa;IAAAa,QAAA,gBAC7CtB,OAAA,CAACL,yBAAyB;MAACyB,EAAE,EAAC;MAC5B;MACA;MACA;MACA;MACA;MACA;MACA;IAAA;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACJ1B,OAAA,CAACN,cAAc;MAAC0B,EAAE,EAAC;IAAiB;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACvC1B,OAAA;MAAQ2B,QAAQ,EAAEpB,SAAS,IAAI,CAACJ,MAAM,IAAI,CAACC,QAAS;MAACgB,EAAE,EAAC,QAAQ;MAAAE,QAAA,eAC9DtB,OAAA;QAAMoB,EAAE,EAAC,aAAa;QAAAE,QAAA,EACnBf,SAAS,gBAAGP,OAAA;UAAK4B,SAAS,EAAC,SAAS;UAACR,EAAE,EAAC;QAAS;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,GAAG;MAAS;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,EAERrB,OAAO,iBAAIL,OAAA;MAAKoB,EAAE,EAAC,iBAAiB;MAAAE,QAAA,EAAEjB;IAAO;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjD,CAAC;AAEX;AAACxB,EAAA,CA5DuBD,YAAY;EAAA,QACnBJ,SAAS,EACPC,WAAW;AAAA;AAAA+B,EAAA,GAFN5B,YAAY;AAAA,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}