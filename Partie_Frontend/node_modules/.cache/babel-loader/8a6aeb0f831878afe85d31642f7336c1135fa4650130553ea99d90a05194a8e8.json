{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yujir\\\\Desktop\\\\projet annuel ek\\\\Projet-annuel-Backend\\\\Partie_Frontend\\\\src\\\\components\\\\PageUser.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Cookies from 'js-cookie';\nimport { jwtDecode } from 'jwt-decode';\nimport './PageUser.css';\nimport logo from '../img/dossier.png';\nimport Delete from '../img/delete.png';\nimport Ajouter from '../img/ajouter.png';\nimport Video from '../img/city-night-panorama-moewalls-com.mp4';\n\n//page faite par elyes\n\n//composant permettant au user d'insérer, supprimer et télécharger les fichier insérer\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction PageAccueil() {\n  _s();\n  const [files, setFiles] = useState([]);\n  const [filteredFiles, setFilteredFiles] = useState([]);\n  const [userId, setUserid] = useState('');\n  const [token, setToken] = useState('');\n  const [denied, setDenied] = useState(false);\n  const [quantiteStockage, setQuantiteStockage] = useState(0);\n  const [stockageDisponible, setStockageDisponible] = useState(0);\n  const [userInfos, setUserInfos] = useState({});\n  const [Buttonenable, setButton] = useState(true);\n  const [fileName, setFileName] = useState('');\n  const [fileToSend, setFileToSend] = useState(null);\n  const [fileTaille, setFileTaille] = useState('');\n  const [sortType, setSortType] = useState('date');\n  const [searchTerm, setSearchTerm] = useState('');\n  const [filterFormat, setFilterFormat] = useState('');\n  useEffect(() => {\n    const value = Cookies.get('token'); // Récupère le token stocké dans les cookies\n    if (value) {\n      const tokenData = JSON.parse(value); // Parse le token en un objet JSON\n      const decodedToken = jwtDecode(tokenData); // Décode le token pour extraire les informations utilisateur\n\n      setUserid(decodedToken.id); // Définit l'ID utilisateur dans l'état\n      setQuantiteStockage(decodedToken.quantiteStockage); // Définit la quantité de stockage dans l'état\n      setToken(tokenData); // Définit le token dans l'état\n\n      fetchFiles(decodedToken.id, tokenData); // Récupère les fichiers associés à l'utilisateur\n      fetchUserInfos(decodedToken.id); // Récupère les informations utilisateur associées à l'ID\n    } else {\n      window.location.href = '/Denied'; // Redirige vers une page d'accès refusé si le token est absent\n    }\n  }, []);\n\n  // On appelle l'API pour vérifier la présence des fichiers\n  const fetchFiles = async (id, tokenData) => {\n    try {\n      const response = await axios.post('http://localhost:8000/file/show', {\n        token: tokenData,\n        // Inclut le token dans la requête\n        userID: id // Envoie l'ID de l'utilisateur dans la requête\n      });\n      if (response.status === 200) {\n        const filesData = response.data.files; // Récupère les fichiers\n\n        // Vérifie si 'Facture du supplément de stockage.pdf' est présent\n        const isSupplementInvoicePresent = filesData.some(file => file.name === 'Facture du supplément de stockage.pdf');\n\n        // Si le fichier est trouvé, met showicon à false\n        if (isSupplementInvoicePresent) {\n          setshowicon(false);\n        } else {\n          setshowicon(true); // Remet à true si le fichier n'est pas trouvé\n        }\n        setFiles(filesData); // Met à jour l'état avec les fichiers récupérés\n        setFilteredFiles(filesData); // Initialise les fichiers filtrés avec les données récupérées\n      } else {\n        setDenied(true); // Active l'état d'accès refusé si la requête échoue\n      }\n    } catch (error) {\n      console.error('Une erreur s\\'est produite lors de la récupération des fichiers :', error); // Affiche une erreur en cas de problème\n    }\n  };\n\n  // On appelle l'API pour récupérer les informations de l'utilisateur\n  const fetchUserInfos = async id => {\n    try {\n      const response = await axios.post('http://localhost:8000/user/infosuser', {\n        userID: id // Envoie l'ID de l'utilisateur dans la requête\n      });\n      if (response.status === 200) {\n        setUserInfos(response.data.user); // Met à jour l'état avec les informations utilisateur récupérées\n        setStockageDisponible(response.data.user.stockagedisponible); // Met à jour le stockage disponible dans l'état\n      } else {\n        setDenied(true); // Active l'état d'accès refusé si la requête échoue\n      }\n    } catch (error) {\n      console.error('Une erreur s\\'est produite lors de la récupération des informations utilisateur :', error); // Affiche une erreur en cas de problème\n    }\n  };\n\n  // Met à jour le nom du fichier\n  const handleFileChange = event => {\n    const file = event.target.files[0]; // Récupère le premier fichier sélectionné\n    if (file) {\n      setFileName(file.name); // Met à jour l'état avec le nom du fichier\n      setFileToSend(file); // Enregistre le fichier pour l'envoi avec son contenu en binaires\n      setFileTaille(file.size); // Met à jour la taille du fichier dans l'état\n      if (file.size < quantiteStockage) {\n        // Vérifie si la taille du fichier est inférieure à l'espace de stockage disponible\n        setButton(false); // Active le bouton d'envoi si la condition est remplie\n      }\n    }\n  };\n\n  // Fonction qui appelle l'API pour insérer un fichier\n  const handleFileUpload = async () => {\n    try {\n      const formData = new FormData();\n      formData.append('file', fileToSend); // Ajoute le fichier à envoyer au formData\n      formData.append('nom', fileName); // Ajoute le nom du fichier\n      formData.append('taille', fileTaille); // Ajoute la taille du fichier\n      formData.append('userid', userId); // Ajoute l'ID utilisateur\n      formData.append('stockagedisponible', stockageDisponible); // Ajoute l'espace de stockage disponible\n      formData.append('type', fileToSend.type); // Ajoute le type MIME du fichier\n\n      if (fileTaille > stockageDisponible || fileTaille > quantiteStockage) {\n        // Vérifie si le fichier dépasse l'espace de stockage disponible\n        alert('Votre fichier dépasse la taille de stockage disponible'); // Alerte si la taille dépasse la limite\n      } else {\n        const response = await axios.post('http://localhost:8000/file/addFile', formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data' // Spécifie l'en-tête multipart pour l'envoi de fichier\n          }\n        });\n        alert('Fichier envoyé avec succès'); // Alerte de succès d'envoi\n        fetchFiles(userId, token); // Recharge les fichiers après l'envoi\n        setStockageDisponible(response.data); // Met à jour l'espace de stockage disponible après l'envoi\n      }\n    } catch (error) {\n      console.error('Une erreur s\\'est produite lors de l\\'envoi du fichier :', error); // Gère les erreurs lors de l'envoi\n    }\n  };\n\n  // Fonction qui appelle l'API pour supprimer un fichier\n  const handleFileDelete = async (ID, fileSize) => {\n    try {\n      const data = {\n        id: ID,\n        // ID du fichier à supprimer\n        token: token // Token d'authentification\n      };\n      const response = await axios.post('http://localhost:8000/file/delete', data); // Envoie la requête de suppression\n\n      if (response.status === 200) {\n        alert('Fichier supprimé avec succès'); // Alerte de confirmation de suppression\n        setFiles(files.filter(file => file.id !== ID)); // Met à jour la liste des fichiers après suppression\n        setFilteredFiles(filteredFiles.filter(file => file.id !== ID)); // Met à jour la liste filtrée des fichiers\n        updateUserStorage(fileSize); // Met à jour l'espace de stockage de l'utilisateur\n      }\n    } catch (error) {\n      console.error('Une erreur s\\'est produite lors de la suppression du fichier :', error); // Gère les erreurs lors de la suppression\n    }\n  };\n\n  // Fonction qui appelle l'API pour mettre à jour le stockage disponible de l'utilisateur\n  const updateUserStorage = async fileSize => {\n    try {\n      const newStorage = stockageDisponible + fileSize; // Calcule le nouveau stockage disponible\n      await axios.post('http://localhost:8000/user/updateuser', {\n        id: userId,\n        // ID de l'utilisateur\n        size: newStorage // Nouvelle taille de stockage disponible\n      });\n      setStockageDisponible(newStorage); // Met à jour l'état avec le nouveau stockage\n    } catch (error) {\n      console.error('Une erreur s\\'est produite lors de la mise à jour du stockage utilisateur :', error); // Gère les erreurs lors de la mise à jour\n    }\n  };\n  const handleDeleteClick = (fileId, fileSize) => {\n    handleFileDelete(fileId, fileSize); // Appelle la fonction de suppression avec l'ID et la taille du fichier\n  };\n  useEffect(() => {\n    let updatedFiles = [...files]; // Copie des fichiers pour les manipuler\n\n    // Filtrer par nom\n    if (searchTerm) {\n      updatedFiles = updatedFiles.filter(file => file.nom.toLowerCase().includes(searchTerm.toLowerCase()) // Filtre les fichiers dont le nom correspond à la recherche\n      );\n    }\n\n    // Filtrer par format\n    if (filterFormat) {\n      updatedFiles = updatedFiles.filter(file => {\n        const fileExtension = file.nom.split('.').pop(); // Récupère l'extension du fichier\n        return fileExtension && fileExtension.includes(filterFormat); // Filtre les fichiers par leur format (extension)\n      });\n    }\n\n    // Trier les fichiers\n    if (sortType === 'date') {\n      updatedFiles.sort((a, b) => new Date(b.uploadDate) - new Date(a.uploadDate)); // Trie par date d'upload (du plus récent au plus ancien)\n    } else if (sortType === 'size') {\n      updatedFiles.sort((a, b) => b.Taille - a.Taille); // Trie par taille de fichier (du plus grand au plus petit)\n    }\n    setFilteredFiles(updatedFiles); // Met à jour les fichiers filtrés après les opérations\n  }, [searchTerm, filterFormat, sortType, files]); // Dépendances : effectue le tri/filtrage à chaque changement\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"video\", {\n      autoPlay: true,\n      muted: true,\n      loop: true,\n      className: \"background-video\",\n      children: /*#__PURE__*/_jsxDEV(\"source\", {\n        src: Video,\n        type: \"video/mp4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n      onClick: () => window.location.href = '/DeleteUser',\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"icon-delete\",\n        src: Delete,\n        alt: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n      onClick: () => window.location.href = '/NewTarifs',\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"icon-add\",\n        src: Ajouter,\n        alt: \"Ajouter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-filter-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"search-label\",\n        children: [\"Rechercher un fichier :\", /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"search-input\",\n          type: \"text\",\n          value: searchTerm,\n          onChange: e => setSearchTerm(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"filter-label\",\n        children: [\"Filtrer par format :\", /*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"filter-select\",\n          value: filterFormat,\n          onChange: e => setFilterFormat(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Tous les formats\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"pdf\",\n            children: \"PDF\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"jpg\",\n            children: \"JPG\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"png\",\n            children: \"PNG\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"docx\",\n            children: \"DOCX\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"xlsx\",\n            children: \"XLSX\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"txt\",\n            children: \"TXT\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"csv\",\n            children: \"CSV\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"sort-label\",\n        children: [\"Trier par :\", /*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"sort-select\",\n          value: sortType,\n          onChange: e => setSortType(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"date\",\n            children: \"Date d'upload\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"size\",\n            children: \"Poids\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"files-list\",\n      children: Array.isArray(filteredFiles) && filteredFiles.map((file, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"file-item\",\n        children: [file.file && /*#__PURE__*/_jsxDEV(\"a\", {\n          href: URL.createObjectURL(new Blob([new Uint8Array(file.file.data)], {\n            type: 'application/pdf'\n          })),\n          download: file.nom,\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"file-logo\",\n            src: logo,\n            alt: \"Logo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 11\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"file-name\",\n          children: file.nom\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 7\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDeleteClick(file.id, file.Taille),\n          className: \"delete-button\",\n          children: \"Supprimer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 7\n        }, this), \" \"]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 5\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"upload-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"file-upload\",\n        className: \"file-input\",\n        type: \"file\",\n        onChange: handleFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"file-upload\",\n        className: \"upload-button\",\n        children: \"Choisissez un fichier\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 9\n      }, this), fileName && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"file-name-display\",\n        children: [\"Nom du fichier: \", fileName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 22\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"upload-submit\",\n        onClick: handleFileUpload,\n        disabled: Buttonenable,\n        children: \"Envoyer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(PageAccueil, \"HSOypreK7+jkndrnMhrlH0i5B0w=\");\n_c = PageAccueil;\nexport default PageAccueil;\nvar _c;\n$RefreshReg$(_c, \"PageAccueil\");","map":{"version":3,"names":["React","useState","useEffect","axios","Cookies","jwtDecode","logo","Delete","Ajouter","Video","jsxDEV","_jsxDEV","Fragment","_Fragment","PageAccueil","_s","files","setFiles","filteredFiles","setFilteredFiles","userId","setUserid","token","setToken","denied","setDenied","quantiteStockage","setQuantiteStockage","stockageDisponible","setStockageDisponible","userInfos","setUserInfos","Buttonenable","setButton","fileName","setFileName","fileToSend","setFileToSend","fileTaille","setFileTaille","sortType","setSortType","searchTerm","setSearchTerm","filterFormat","setFilterFormat","value","get","tokenData","JSON","parse","decodedToken","id","fetchFiles","fetchUserInfos","window","location","href","response","post","userID","status","filesData","data","isSupplementInvoicePresent","some","file","name","setshowicon","error","console","user","stockagedisponible","handleFileChange","event","target","size","handleFileUpload","formData","FormData","append","type","alert","headers","handleFileDelete","ID","fileSize","filter","updateUserStorage","newStorage","handleDeleteClick","fileId","updatedFiles","nom","toLowerCase","includes","fileExtension","split","pop","sort","a","b","Date","uploadDate","Taille","children","autoPlay","muted","loop","className","src","_jsxFileName","lineNumber","columnNumber","onClick","alt","onChange","e","Array","isArray","map","index","URL","createObjectURL","Blob","Uint8Array","download","htmlFor","disabled","_c","$RefreshReg$"],"sources":["C:/Users/yujir/Desktop/projet annuel ek/Projet-annuel-Backend/Partie_Frontend/src/components/PageUser.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport Cookies from 'js-cookie';\r\nimport { jwtDecode } from 'jwt-decode';\r\nimport './PageUser.css';\r\nimport logo from '../img/dossier.png';\r\nimport Delete from '../img/delete.png';\r\nimport Ajouter from '../img/ajouter.png';\r\nimport Video from '../img/city-night-panorama-moewalls-com.mp4'\r\n\r\n\r\n//page faite par elyes\r\n\r\n\r\n//composant permettant au user d'insérer, supprimer et télécharger les fichier insérer\r\nfunction PageAccueil() {\r\n  const [files, setFiles] = useState([]);\r\n  const [filteredFiles, setFilteredFiles] = useState([]);\r\n  const [userId, setUserid] = useState('');\r\n  const [token, setToken] = useState('');\r\n  const [denied, setDenied] = useState(false);\r\n  const [quantiteStockage, setQuantiteStockage] = useState(0);\r\n  const [stockageDisponible, setStockageDisponible] = useState(0);\r\n  const [userInfos, setUserInfos] = useState({});\r\n  const [Buttonenable, setButton] = useState(true);\r\n\r\n  const [fileName, setFileName] = useState('');\r\n  const [fileToSend, setFileToSend] = useState(null);\r\n  const [fileTaille, setFileTaille] = useState('');\r\n  \r\n  const [sortType, setSortType] = useState('date');\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [filterFormat, setFilterFormat] = useState('');\r\n\r\n  useEffect(() => {\r\n    const value = Cookies.get('token'); // Récupère le token stocké dans les cookies\r\n    if (value) {\r\n      const tokenData = JSON.parse(value); // Parse le token en un objet JSON\r\n      const decodedToken = jwtDecode(tokenData); // Décode le token pour extraire les informations utilisateur\r\n      \r\n      setUserid(decodedToken.id); // Définit l'ID utilisateur dans l'état\r\n      setQuantiteStockage(decodedToken.quantiteStockage); // Définit la quantité de stockage dans l'état\r\n      setToken(tokenData); // Définit le token dans l'état\r\n\r\n      fetchFiles(decodedToken.id, tokenData); // Récupère les fichiers associés à l'utilisateur\r\n      fetchUserInfos(decodedToken.id); // Récupère les informations utilisateur associées à l'ID\r\n    } else {\r\n      window.location.href = '/Denied'; // Redirige vers une page d'accès refusé si le token est absent\r\n    }\r\n  }, []);\r\n\r\n // On appelle l'API pour vérifier la présence des fichiers\r\n const fetchFiles = async (id, tokenData) => {\r\n  try {\r\n    const response = await axios.post('http://localhost:8000/file/show', {\r\n      token: tokenData, // Inclut le token dans la requête\r\n      userID: id, // Envoie l'ID de l'utilisateur dans la requête\r\n    });\r\n\r\n    if (response.status === 200) {\r\n      const filesData = response.data.files; // Récupère les fichiers\r\n\r\n      // Vérifie si 'Facture du supplément de stockage.pdf' est présent\r\n      const isSupplementInvoicePresent = filesData.some(file => file.name === 'Facture du supplément de stockage.pdf');\r\n\r\n      // Si le fichier est trouvé, met showicon à false\r\n      if (isSupplementInvoicePresent) {\r\n        setshowicon(false);\r\n      } else {\r\n        setshowicon(true); // Remet à true si le fichier n'est pas trouvé\r\n      }\r\n\r\n      setFiles(filesData); // Met à jour l'état avec les fichiers récupérés\r\n      setFilteredFiles(filesData); // Initialise les fichiers filtrés avec les données récupérées\r\n    } else {\r\n      setDenied(true); // Active l'état d'accès refusé si la requête échoue\r\n    }\r\n  } catch (error) {\r\n    console.error('Une erreur s\\'est produite lors de la récupération des fichiers :', error); // Affiche une erreur en cas de problème\r\n  }\r\n};\r\n\r\n\r\n  // On appelle l'API pour récupérer les informations de l'utilisateur\r\nconst fetchUserInfos = async (id) => {\r\n  try {\r\n    const response = await axios.post('http://localhost:8000/user/infosuser', {\r\n      userID: id, // Envoie l'ID de l'utilisateur dans la requête\r\n    });\r\n\r\n    if (response.status === 200) {\r\n      setUserInfos(response.data.user); // Met à jour l'état avec les informations utilisateur récupérées\r\n      setStockageDisponible(response.data.user.stockagedisponible); // Met à jour le stockage disponible dans l'état\r\n    } else {\r\n      setDenied(true); // Active l'état d'accès refusé si la requête échoue\r\n    }\r\n  } catch (error) {\r\n    console.error('Une erreur s\\'est produite lors de la récupération des informations utilisateur :', error); // Affiche une erreur en cas de problème\r\n  }\r\n};\r\n\r\n\r\n // Met à jour le nom du fichier\r\nconst handleFileChange = (event) => {\r\n  const file = event.target.files[0]; // Récupère le premier fichier sélectionné\r\n  if (file) {\r\n    setFileName(file.name); // Met à jour l'état avec le nom du fichier\r\n    setFileToSend(file); // Enregistre le fichier pour l'envoi avec son contenu en binaires\r\n    setFileTaille(file.size); // Met à jour la taille du fichier dans l'état\r\n    if (file.size < quantiteStockage) { // Vérifie si la taille du fichier est inférieure à l'espace de stockage disponible\r\n      setButton(false); // Active le bouton d'envoi si la condition est remplie\r\n    }\r\n  }\r\n};\r\n\r\n\r\n\r\n // Fonction qui appelle l'API pour insérer un fichier\r\nconst handleFileUpload = async () => {\r\n  try {\r\n    const formData = new FormData();\r\n    formData.append('file', fileToSend); // Ajoute le fichier à envoyer au formData\r\n    formData.append('nom', fileName); // Ajoute le nom du fichier\r\n    formData.append('taille', fileTaille); // Ajoute la taille du fichier\r\n    formData.append('userid', userId); // Ajoute l'ID utilisateur\r\n    formData.append('stockagedisponible', stockageDisponible); // Ajoute l'espace de stockage disponible\r\n    formData.append('type', fileToSend.type); // Ajoute le type MIME du fichier\r\n\r\n    if (fileTaille > stockageDisponible || fileTaille > quantiteStockage) { // Vérifie si le fichier dépasse l'espace de stockage disponible\r\n      alert('Votre fichier dépasse la taille de stockage disponible'); // Alerte si la taille dépasse la limite\r\n    } else {\r\n      const response = await axios.post('http://localhost:8000/file/addFile', formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data' // Spécifie l'en-tête multipart pour l'envoi de fichier\r\n        }\r\n      });\r\n      alert('Fichier envoyé avec succès'); // Alerte de succès d'envoi\r\n      fetchFiles(userId, token); // Recharge les fichiers après l'envoi\r\n      setStockageDisponible(response.data); // Met à jour l'espace de stockage disponible après l'envoi\r\n    }\r\n  } catch (error) {\r\n    console.error('Une erreur s\\'est produite lors de l\\'envoi du fichier :', error); // Gère les erreurs lors de l'envoi\r\n  }\r\n};\r\n\r\n\r\n\r\n// Fonction qui appelle l'API pour supprimer un fichier\r\nconst handleFileDelete = async (ID, fileSize) => {\r\n  try {\r\n    const data = {\r\n      id: ID, // ID du fichier à supprimer\r\n      token: token, // Token d'authentification\r\n    };\r\n\r\n    const response = await axios.post('http://localhost:8000/file/delete', data); // Envoie la requête de suppression\r\n\r\n    if (response.status === 200) {\r\n      alert('Fichier supprimé avec succès'); // Alerte de confirmation de suppression\r\n      setFiles(files.filter(file => file.id !== ID)); // Met à jour la liste des fichiers après suppression\r\n      setFilteredFiles(filteredFiles.filter(file => file.id !== ID)); // Met à jour la liste filtrée des fichiers\r\n      updateUserStorage(fileSize); // Met à jour l'espace de stockage de l'utilisateur\r\n    }\r\n  } catch (error) {\r\n    console.error('Une erreur s\\'est produite lors de la suppression du fichier :', error); // Gère les erreurs lors de la suppression\r\n  }\r\n};\r\n\r\n // Fonction qui appelle l'API pour mettre à jour le stockage disponible de l'utilisateur\r\nconst updateUserStorage = async (fileSize) => {\r\n  try {\r\n    const newStorage = stockageDisponible + fileSize; // Calcule le nouveau stockage disponible\r\n    await axios.post('http://localhost:8000/user/updateuser', {\r\n      id: userId, // ID de l'utilisateur\r\n      size: newStorage, // Nouvelle taille de stockage disponible\r\n    });\r\n    setStockageDisponible(newStorage); // Met à jour l'état avec le nouveau stockage\r\n  } catch (error) {\r\n    console.error('Une erreur s\\'est produite lors de la mise à jour du stockage utilisateur :', error); // Gère les erreurs lors de la mise à jour\r\n  }\r\n};\r\n\r\n\r\nconst handleDeleteClick = (fileId, fileSize) => {\r\n  handleFileDelete(fileId, fileSize); // Appelle la fonction de suppression avec l'ID et la taille du fichier\r\n};\r\n\r\n\r\nuseEffect(() => {\r\n  let updatedFiles = [...files]; // Copie des fichiers pour les manipuler\r\n\r\n  // Filtrer par nom\r\n  if (searchTerm) {\r\n    updatedFiles = updatedFiles.filter(file =>\r\n      file.nom.toLowerCase().includes(searchTerm.toLowerCase()) // Filtre les fichiers dont le nom correspond à la recherche\r\n    );\r\n  }\r\n\r\n  // Filtrer par format\r\n  if (filterFormat) {\r\n    updatedFiles = updatedFiles.filter(file => {\r\n      const fileExtension = file.nom.split('.').pop(); // Récupère l'extension du fichier\r\n      return fileExtension && fileExtension.includes(filterFormat); // Filtre les fichiers par leur format (extension)\r\n    });\r\n  }\r\n\r\n  // Trier les fichiers\r\n  if (sortType === 'date') {\r\n    updatedFiles.sort((a, b) => new Date(b.uploadDate) - new Date(a.uploadDate)); // Trie par date d'upload (du plus récent au plus ancien)\r\n  } else if (sortType === 'size') {\r\n    updatedFiles.sort((a, b) => b.Taille - a.Taille); // Trie par taille de fichier (du plus grand au plus petit)\r\n  }\r\n\r\n  setFilteredFiles(updatedFiles); // Met à jour les fichiers filtrés après les opérations\r\n}, [searchTerm, filterFormat, sortType, files]); // Dépendances : effectue le tri/filtrage à chaque changement\r\n\r\n  return (\r\n    <>\r\n      <video autoPlay muted loop className=\"background-video\">\r\n        <source src={Video} type=\"video/mp4\" />\r\n      </video>\r\n\r\n      <a onClick={() => window.location.href = '/DeleteUser'}>\r\n        <img className='icon-delete' src={Delete} alt=\"Delete\" />\r\n      </a> \r\n      \r\n      <a onClick={() => window.location.href = '/NewTarifs'}>\r\n        <img className='icon-add' src={Ajouter} alt=\"Ajouter\" />\r\n      </a>\r\n      <div className='search-filter-container'>\r\n        <label className='search-label'>\r\n          Rechercher un fichier :\r\n          <input\r\n            className='search-input'\r\n            type=\"text\"\r\n            value={searchTerm}\r\n            onChange={(e) => setSearchTerm(e.target.value)}\r\n          />\r\n        </label>\r\n\r\n        <label className='filter-label'>\r\n          Filtrer par format :\r\n          <select\r\n            className='filter-select'\r\n            value={filterFormat}\r\n            onChange={(e) => setFilterFormat(e.target.value)}\r\n          >\r\n            <option value=\"\">Tous les formats</option>\r\n            <option value=\"pdf\">PDF</option>\r\n            <option value=\"jpg\">JPG</option>\r\n            <option value=\"png\">PNG</option>\r\n            <option value=\"docx\">DOCX</option>\r\n            <option value=\"xlsx\">XLSX</option>\r\n            <option value=\"txt\">TXT</option>\r\n            <option value=\"csv\">CSV</option>\r\n          </select>\r\n        </label>\r\n\r\n        <label className='sort-label'>\r\n          Trier par :\r\n          <select\r\n            className='sort-select'\r\n            value={sortType}\r\n            onChange={(e) => setSortType(e.target.value)}\r\n          >\r\n            <option value=\"date\">Date d'upload</option>\r\n            <option value=\"size\">Poids</option>\r\n          </select>\r\n        </label>\r\n      </div>\r\n\r\n      <div className='files-list'>\r\n  {Array.isArray(filteredFiles) && filteredFiles.map((file, index) => (\r\n    <div className='file-item' key={index}>\r\n      {file.file && (\r\n        <a href={URL.createObjectURL(new Blob([new Uint8Array(file.file.data)], { type: 'application/pdf' }))} download={file.nom}>\r\n          <img className='file-logo' src={logo} alt=\"Logo\" /> {/* Affiche le logo du fichier */}\r\n        </a>\r\n      )}\r\n      <p className='file-name'>{file.nom}</p> {/* Affiche le nom du fichier */}\r\n      <button onClick={() => handleDeleteClick(file.id, file.Taille)} className='delete-button'>Supprimer</button> {/* Bouton pour supprimer le fichier */}\r\n    </div>\r\n  ))}\r\n</div>\r\n\r\n\r\n      <div className='upload-section'>\r\n        <input\r\n          id=\"file-upload\"\r\n          className=\"file-input\"\r\n          type=\"file\"\r\n          onChange={handleFileChange}\r\n        />\r\n        <label htmlFor=\"file-upload\" className=\"upload-button\">\r\n          Choisissez un fichier\r\n        </label>\r\n        {fileName && <p className='file-name-display'>Nom du fichier: {fileName}</p>}\r\n\r\n        <button className=\"upload-submit\" onClick={handleFileUpload} disabled={Buttonenable}>Envoyer</button>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default PageAccueil;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}