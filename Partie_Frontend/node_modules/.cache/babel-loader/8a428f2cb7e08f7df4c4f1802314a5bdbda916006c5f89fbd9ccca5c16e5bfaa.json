{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yujir\\\\Documents\\\\Projet annuel\\\\Projjet_Annuel_Perso\\\\partiefront\\\\src\\\\components\\\\PageUser.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Cookies from 'js-cookie';\nimport { jwtDecode } from 'jwt-decode';\nimport './PageUser.css';\nimport logo from '../img/fichier.png';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction PageAccueil() {\n  _s();\n  const [files, setFiles] = useState([]); // Utilisez un tableau pour stocker les fichiers\n  const [userId, setUserid] = useState('');\n  const [token, setToken] = useState('');\n\n  // Données pour l'envoi\n  const [fileName, setFileName] = useState('');\n  const [fileToSend, setFileToSend] = useState();\n  const [fileTaille, setFileTaille] = useState('');\n  useEffect(() => {\n    const fetchData = async () => {\n      const value = Cookies.get('token');\n      const tokenData = JSON.parse(value);\n      const decodedToken = jwtDecode(tokenData);\n      setUserid(decodedToken.id);\n      setToken(decodedToken.token);\n      try {\n        const response = await axios.post('http://localhost:8000/file/show', {\n          token: decodedToken.token,\n          userID: decodedToken.id\n        });\n        if (response.status === 200) {\n          // Stockez les fichiers dans l'état\n          setFiles(response.data.files);\n        }\n      } catch (error) {\n        console.error('Une erreur s\\'est produite lors de la récupération du fichier :', error);\n      }\n    };\n    fetchData();\n  }, []);\n  const handleFileChange = event => {\n    const file = event.target.files[0]; // Obtient le premier fichier sélectionné\n\n    if (file) {\n      setFileName(file.name); // Met à jour le nom du fichier\n      setFileToSend(file);\n      setFileTaille(file.size); // Utilisez 'size' pour obtenir la taille du fichier\n    }\n  };\n  const handleFileUpload = async () => {\n    try {\n      const formData = new FormData();\n      formData.append('file', fileToSend); // Ajoutez le fichier à l'objet FormData\n      formData.append('nom', fileName); // Ajoutez le nom du fichier à l'objet FormData\n      formData.append('taille', fileTaille); // Ajoutez la taille du fichier à l'objet FormData\n      formData.append('userid', userId); // Ajoutez l'identifiant de l'utilisateur à l'objet FormData\n\n      const response = await axios.post('http://localhost:8000/file/addFile', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      if (response.status === 200) {\n        // Mettez à jour l'état ou affichez un message de succès\n        alert('Fichier envoyé avec succès');\n      }\n    } catch (error) {\n      console.error('Une erreur s\\'est produite lors de l\\'envoi du fichier :', error);\n      console.log(fileToSend);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"upload-container\",\n      children: Array.isArray(files) && files.map((file, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"file-container\",\n        children: [file.file && /*#__PURE__*/_jsxDEV(\"a\", {\n          href: URL.createObjectURL(new Blob([new Uint8Array(file.file.data)], {\n            type: 'application/pdf'\n          })),\n          download: file.nom,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"logo\",\n            src: logo,\n            alt: \"Logo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"file-name\",\n          children: file.nom\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: handleFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Nom du fichier :\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), \" \", fileName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleFileUpload,\n        children: \"Envoyer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(PageAccueil, \"kppnFKjd2EsYmL9DIAkeUuK5Szg=\");\n_c = PageAccueil;\nexport default PageAccueil;\nvar _c;\n$RefreshReg$(_c, \"PageAccueil\");","map":{"version":3,"names":["React","useState","useEffect","axios","Cookies","jwtDecode","logo","jsxDEV","_jsxDEV","Fragment","_Fragment","PageAccueil","_s","files","setFiles","userId","setUserid","token","setToken","fileName","setFileName","fileToSend","setFileToSend","fileTaille","setFileTaille","fetchData","value","get","tokenData","JSON","parse","decodedToken","id","response","post","userID","status","data","error","console","handleFileChange","event","file","target","name","size","handleFileUpload","formData","FormData","append","headers","alert","log","children","className","Array","isArray","map","index","href","URL","createObjectURL","Blob","Uint8Array","type","download","nom","src","alt","_jsxFileName","lineNumber","columnNumber","onChange","onClick","_c","$RefreshReg$"],"sources":["C:/Users/yujir/Documents/Projet annuel/Projjet_Annuel_Perso/partiefront/src/components/PageUser.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport Cookies from 'js-cookie';\r\nimport { jwtDecode } from 'jwt-decode';\r\nimport './PageUser.css';\r\nimport logo from '../img/fichier.png';\r\n\r\nfunction PageAccueil() {\r\n  const [files, setFiles] = useState([]); // Utilisez un tableau pour stocker les fichiers\r\n  const [userId, setUserid] = useState('');\r\n  const [token, setToken] = useState('');\r\n\r\n  // Données pour l'envoi\r\n  const [fileName, setFileName] = useState('');\r\n  const [fileToSend, setFileToSend] = useState();\r\n  const [fileTaille, setFileTaille] = useState('');\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const value = Cookies.get('token');\r\n      const tokenData = JSON.parse(value);\r\n      const decodedToken = jwtDecode(tokenData);\r\n      setUserid(decodedToken.id);\r\n      setToken(decodedToken.token);\r\n\r\n      try {\r\n        const response = await axios.post('http://localhost:8000/file/show', {\r\n          token: decodedToken.token,\r\n          userID: decodedToken.id,\r\n        });\r\n\r\n        if (response.status === 200) {\r\n          // Stockez les fichiers dans l'état\r\n          setFiles(response.data.files);\r\n        }\r\n      } catch (error) {\r\n        console.error('Une erreur s\\'est produite lors de la récupération du fichier :', error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  const handleFileChange = (event) => {\r\n    const file = event.target.files[0]; // Obtient le premier fichier sélectionné\r\n\r\n    if (file) {\r\n      setFileName(file.name); // Met à jour le nom du fichier\r\n      setFileToSend(file);\r\n      setFileTaille(file.size); // Utilisez 'size' pour obtenir la taille du fichier\r\n    }\r\n  };\r\n\r\n  const handleFileUpload = async () => {\r\n    try {\r\n      const formData = new FormData();\r\n      formData.append('file', fileToSend); // Ajoutez le fichier à l'objet FormData\r\n      formData.append('nom', fileName); // Ajoutez le nom du fichier à l'objet FormData\r\n      formData.append('taille', fileTaille); // Ajoutez la taille du fichier à l'objet FormData\r\n      formData.append('userid', userId); // Ajoutez l'identifiant de l'utilisateur à l'objet FormData\r\n  \r\n      const response = await axios.post('http://localhost:8000/file/addFile', formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n      });\r\n   \r\n      if (response.status === 200) {\r\n        // Mettez à jour l'état ou affichez un message de succès\r\n        alert('Fichier envoyé avec succès');\r\n      }\r\n    } catch (error) {\r\n      console.error('Une erreur s\\'est produite lors de l\\'envoi du fichier :', error);   console.log(fileToSend)\r\n    }\r\n  };\r\n  \r\n\r\n  return (\r\n    <>\r\n      <div className=\"upload-container\">\r\n        {/* Vérifiez si files est un tableau avant d'appeler map */}\r\n        {Array.isArray(files) && files.map((file, index) => (\r\n          <div className=\"file-container\" key={index}>\r\n            {file.file && (\r\n              <a href={URL.createObjectURL(new Blob([new Uint8Array(file.file.data)], { type: 'application/pdf' }))} download={file.nom}>\r\n                <img className='logo' src={logo} alt=\"Logo\" />\r\n              </a>\r\n            )}\r\n            <p className='file-name'>{file.nom}</p>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div>\r\n        <input type=\"file\" onChange={handleFileChange} />\r\n        <div>\r\n          <label>Nom du fichier :</label> {fileName}\r\n        </div>\r\n        <button onClick={handleFileUpload}>Envoyer</button>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default PageAccueil;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}