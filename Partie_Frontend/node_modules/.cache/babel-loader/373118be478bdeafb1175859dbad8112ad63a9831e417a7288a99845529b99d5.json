{"ast":null,"code":"import valid from \"card-validator\";\nexport default function NewTarifs(values) {\n  let errors = {};\n  let creditCard = valid.number(values.cardNumber);\n  creditCard.expirationDate = valid.expirationDate(values.cardExpiration);\n  creditCard.cvv = valid.cvv(values.cardSecurityCode);\n  creditCard.cardholderName = valid.cardholderName(values.cardName);\n  creditCard.postalCode = valid.postalCode(values.cardPostalCode);\n  errors.show = true;\n  errors.variant = \"danger\";\n  errors.message = \"An unknown error occured. Please try again later\";\n  errors.cname = false;\n  errors.cnumber = false;\n  errors.ctype = false;\n  errors.cexp = false;\n  errors.ccvv = false;\n  errors.cpostal = false;\n  if (values.cardPostalCode === null || !values.cardPostalCode.trim()) {\n    errors.message = \"Credit card postal code is not complete\";\n  } else if (creditCard.postalCode.isValid) {\n    errors.cpostal = true;\n  } else {\n    errors.message = \"Credit card postal code is invalid\";\n  }\n\n  //Card CVV expiration\n  if (values.cardSecurityCode === null || !values.cardSecurityCode.trim()) {\n    errors.message = \"Credit card CVC is not complete\";\n  } else if (creditCard.cvv.isValid) {\n    errors.ccvv = true;\n  } else {\n    errors.message = \"Credit card CVC is invalid\";\n  }\n\n  //Card Expiration Verification\n  if (values.cardExpiration === null || !values.cardExpiration.trim()) {\n    errors.message = \"Credit card expiration date is not complete\";\n  } else if (creditCard.expirationDate.isValid) {\n    errors.cexp = true;\n  } else {\n    errors.message = \"Credit card expiration date is invalid\";\n  }\n\n  //Card Type Verification\n  if (values.cardType === null || !values.cardType.trim() || creditCard.card === null) {\n    errors.message = \"Credit card type is not complete\";\n  } else if (creditCard.card.type && creditCard.card.type.toUpperCase() === values.cardType.toUpperCase()) {\n    errors.ctype = true;\n  } else {\n    errors.message = \"Credit card type is invalid\";\n  }\n\n  //Card Number Verification\n  if (values.cardNumber === null || !values.cardNumber.trim()) {\n    errors.message = \"Credit card number is not complete\";\n  } else if (creditCard.isValid) {\n    errors.cnumber = true;\n  } else {\n    errors.message = \"Credit card number is invalid\";\n  }\n\n  //Cardholder Name Verification\n  if (values.cardName === null || !values.cardName.trim()) {\n    errors.message = \"Cardholder name is not complete\";\n  } else if (creditCard.cardholderName.isValid) {\n    errors.cname = true;\n  } else {\n    errors.message = \"Cardholder name is invalid\";\n  }\n  if (errors.ctype && errors.cname && errors.cnumber && errors.cexp && errors.cpostal && errors.ccvv) {\n    errors.variant = \"success\";\n    errors.message = \"Credit Card is valid\";\n  }\n  return errors;\n}\n_c = NewTarifs;\nvar _c;\n$RefreshReg$(_c, \"NewTarifs\");","map":{"version":3,"names":["valid","NewTarifs","values","errors","creditCard","number","cardNumber","expirationDate","cardExpiration","cvv","cardSecurityCode","cardholderName","cardName","postalCode","cardPostalCode","show","variant","message","cname","cnumber","ctype","cexp","ccvv","cpostal","trim","isValid","cardType","card","type","toUpperCase","_c","$RefreshReg$"],"sources":["C:/Users/yujir/Documents/Projet annuel/Projjet_Annuel_Perso/partiefront/src/components/NewTarifs.js"],"sourcesContent":["import valid from \"card-validator\";\r\n\r\nexport default function NewTarifs(values) {\r\n  let errors = {};\r\n  let creditCard = valid.number(values.cardNumber);\r\n\r\n  creditCard.expirationDate = valid.expirationDate(values.cardExpiration);\r\n  creditCard.cvv = valid.cvv(values.cardSecurityCode);\r\n  creditCard.cardholderName = valid.cardholderName(values.cardName);\r\n  creditCard.postalCode = valid.postalCode(values.cardPostalCode);\r\n\r\n  errors.show = true;\r\n  errors.variant = \"danger\";\r\n  errors.message = \"An unknown error occured. Please try again later\"\r\n  errors.cname = false;\r\n  errors.cnumber = false;\r\n  errors.ctype = false;\r\n  errors.cexp = false;\r\n  errors.ccvv = false;\r\n  errors.cpostal = false;\r\n\r\n  if (values.cardPostalCode === null || !values.cardPostalCode.trim()) {\r\n    errors.message = \"Credit card postal code is not complete\";\r\n  } else if (creditCard.postalCode.isValid) {\r\n    errors.cpostal = true;\r\n  } else {\r\n    errors.message = \"Credit card postal code is invalid\";\r\n  }\r\n\r\n  //Card CVV expiration\r\n  if (values.cardSecurityCode === null || !values.cardSecurityCode.trim()) {\r\n    errors.message = \"Credit card CVC is not complete\";\r\n  } else if (creditCard.cvv.isValid) {\r\n    errors.ccvv = true;\r\n  } else {\r\n    errors.message = \"Credit card CVC is invalid\";\r\n  }\r\n\r\n  //Card Expiration Verification\r\n  if (values.cardExpiration === null || !values.cardExpiration.trim()) {\r\n    errors.message = \"Credit card expiration date is not complete\";\r\n  } else if (creditCard.expirationDate.isValid) {\r\n    errors.cexp = true;\r\n  } else {\r\n    errors.message = \"Credit card expiration date is invalid\";\r\n  }\r\n\r\n  //Card Type Verification\r\n  if (\r\n    values.cardType === null ||\r\n    !values.cardType.trim() ||\r\n    creditCard.card === null\r\n  ) {\r\n    errors.message = \"Credit card type is not complete\";\r\n  } else if (\r\n    creditCard.card.type &&\r\n    creditCard.card.type.toUpperCase() === values.cardType.toUpperCase()\r\n  ) {\r\n    errors.ctype = true;\r\n  } else {\r\n    errors.message = \"Credit card type is invalid\";\r\n  }\r\n\r\n  //Card Number Verification\r\n  if (values.cardNumber === null || !values.cardNumber.trim()) {\r\n    errors.message = \"Credit card number is not complete\";\r\n  } else if (creditCard.isValid) {\r\n    errors.cnumber = true;\r\n  } else {\r\n    errors.message = \"Credit card number is invalid\";\r\n  }\r\n\r\n  //Cardholder Name Verification\r\n  if (values.cardName === null || !values.cardName.trim()) {\r\n    errors.message = \"Cardholder name is not complete\";\r\n  } else if (creditCard.cardholderName.isValid) {\r\n    errors.cname = true;\r\n  } else {\r\n    errors.message = \"Cardholder name is invalid\";\r\n  }\r\n\r\n  if (\r\n    errors.ctype &&\r\n    errors.cname &&\r\n    errors.cnumber &&\r\n    errors.cexp &&\r\n    errors.cpostal &&\r\n    errors.ccvv\r\n  ) {\r\n    errors.variant = \"success\";\r\n    errors.message = \"Credit Card is valid\";\r\n  }\r\n\r\n  return errors;\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}